/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };...
 */
class Solution {
public:
    void inorder(TreeNode* root,vector<vector<int>> &dat,vector<int> &stck)
    {
        if(root==NULL)
        {
            return;
        }
        stck.push_back(root->val);
        inorder(root->left,dat,stck);
        if(root->left==NULL && root->right==NULL)
        {
            dat.push_back(stck); 
            
         }
        
        inorder(root->right,dat,stck);
        stck.pop_back();        
        
    }
    int sumRootToLeaf(TreeNode* root) {
        vector<vector<int>> dat;
        int sum=0;
        vector<int> stck;
        inorder(root,dat,stck);
        for(int i=0;i<dat.size();i++)
        {
            sum+=binaryToDecimal(dat[i]);
            
            
        }
        return sum;
       
    }
    int binaryToDecimal(vector<int> vec)
    {
        int sum=0;
        for(int i=0;i<vec.size();i++)
        {
            sum+=vec[i]*pow(2,vec.size()-1-i);
        }
        return sum;
    }
};
//chinu
